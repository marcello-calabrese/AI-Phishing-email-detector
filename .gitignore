# AI Phishing Email Detector - .gitignore

# =============================================================================
# SENSITIVE FILES - API KEYS AND CONFIGURATION
# =============================================================================
# Main configuration file with API keys
config.json

# Backup configuration files
config.json.bak
config.json.backup
config.json.old

# Environment files
.env
.env.local
.env.production
.env.staging

# Any files containing API keys
*api_key*
*secret*
*credentials*

# =============================================================================
# PYTHON
# =============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# PyBuilder
.pybuilder/
target/

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# STREAMLIT
# =============================================================================
# Streamlit secrets
.streamlit/secrets.toml
.streamlit/config.toml

# =============================================================================
# AI PHISHING DETECTOR SPECIFIC FILES
# =============================================================================
# Generated reports (keep template, ignore generated files)
reports/*.pdf
reports/*.html
reports/*.json
!reports/.gitkeep
!reports/README.md

# Analysis data and history (sensitive data)
data/
history/
analysis_history.json
*.db
*.sqlite

# Cache directories
cache/
.cache/
temp/
tmp/

# Log files
*.log
logs/
phishing_detector.log

# Test files with potentially sensitive email content
test_emails/
sample_emails/
email_samples/

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# =============================================================================
# SYSTEM FILES
# =============================================================================
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# SECURITY & BACKUP FILES
# =============================================================================
# Backup files
*.bak
*.backup
*.swp
*.swo
*~

# Security scan results
security_scan_*
vulnerability_report_*

# =============================================================================
# PERFORMANCE & MONITORING
# =============================================================================
# Performance profiling
*.prof
*.profile

# Memory dumps
*.dump

# =============================================================================
# DOCKER (if you decide to containerize later)
# =============================================================================
# Docker
.dockerignore
docker-compose.override.yml

# =============================================================================
# MISC
# =============================================================================
# Temporary files
*.tmp
*.temp

# Archive files (unless specifically needed)
*.zip
*.tar.gz
*.rar
*.7z

# Editor swap files
.*.swp
.*.swo

# =============================================================================
# PROJECT SPECIFIC NOTES
# =============================================================================
# Personal notes that shouldn't be shared
NOTES.md
TODO.md
personal_notes.txt
development_notes.md

# Medium article drafts and documentation files
medium_article.md
medium_article_short.md
medium_draft_*.md

# Project template and documentation files
PRP Template.docx
*.docx

# Windows batch files (local development utilities)
*.bat

# Screenshots for documentation (keep final ones, ignore drafts)
screenshots/draft_*
screenshots/temp_*